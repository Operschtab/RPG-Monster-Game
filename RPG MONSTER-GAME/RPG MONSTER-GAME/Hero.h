#pragma once
#include "Creature.h"
using namespace std; // т.к. в родительском классе Creature мы добавили стринг, то чтобы здесь мы могли работать с типом стринг мы прописываем пространство имен
// класс Hero является унаследованным от родительского класса  Creature
class Hero : public Creature
{
protected:
	string hero_name;
public:
	Hero(Creature_Data Data, string hero_name); // конструктор принимающий структуру данных существа
	virtual void use_skill() = 0;  // ключевое слово virtual означает что это виртуальный метод, а добавление =0, означает что это чистый виртуальный метод
								   // у чистого виртуального метода нет реализации в .срр . Если в классе есть хоть один "чистый виртуальный метод", то класс 
		                           // становится "абстрактным", но производные от этого класса не будут являться абстрактными классами
		                           // если класс стал абстрактным , то мы не можем создавать обьекты этого класса.   
	
	string get_name()			   // методо для возврата имени героя, для того чтобы обращаться к нему по имени из Main().  
	{							   // Нужен нам т.к. из функции Main указатель на героя не имеет доступ к protected полям
		return hero_name;
	}
};

